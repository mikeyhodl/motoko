name: release

on:
  push:
    tags:
    - '*'
  workflow_dispatch:
    # To test this workflow: Go to Actions -> release -> Run workflow
    # Or using the CLI: gh workflow run release --ref <branch> -f version=test-draft-release
    # This creates a draft release tagged with the specified version
    # Remember to delete the draft release after testing!
    inputs:
      version:
        description: 'Version for draft release (default: test-draft-release)'
        required: false
        default: test-draft-release
        type: string

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ inputs.version || github.ref_name }}
    steps:
      - name: Prepare release
        run: echo "Preparing release for version ${{ inputs.version || github.ref_name }}"

  # Check that the changelog is in good order and extract the changelog.
  changelog:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
    - uses: actions/checkout@v5
    - name: Extract changelog
      # Skip this step for draft releases. Leave the release body empty.
      if: ${{ github.event_name != 'workflow_dispatch' }}
      id: read_changelog
      uses: ./.github/actions/extract-changelog
      with:
        version: ${{ needs.prepare.outputs.version }}
    outputs:
      release_body: ${{ steps.read_changelog.outputs.release_body }}

  build:
    needs: prepare
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-13, ubuntu-24.04-arm, macos-latest ]
    concurrency:
      group: release-build-${{ matrix.os }}-${{ needs.prepare.outputs.version }}
      cancel-in-progress: true
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v5
    - uses: cachix/install-nix-action@v31
    - uses: cachix/cachix-action@v16
      with:
        name: ic-hs-test
        # NB: No auth token, we don't expect to push new stuff here

    - name: Build platform-specific release files
      run: nix build --max-jobs 1 '.#"release-files-${{ matrix.os }}"'

    - name: Upload Release Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-files-${{ matrix.os }}
        path: result/*

    - name: Test release files
      run: |
        uname -s -m
        moc="$(nix build --max-jobs 1 .#release.moc --print-out-paths)"
        "$moc/bin/moc" --version
        file "$moc/bin/moc"
        ldd "$moc/bin/moc" || true

  publish:
    runs-on: ubuntu-latest
    needs: [prepare, changelog, build]
    steps:
    - name: Download all release artifacts
      uses: actions/download-artifact@v5
      with:
        path: release-assets
        pattern: release-files-*
        merge-multiple: true

    - name: List downloaded files
      run: |
        echo "Contents of release-assets directory:"
        find release-assets -type f -ls || true

    - name: Upload Release Assets
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ needs.prepare.outputs.version }}
        file: release-assets/*
        file_glob: true
        body: ${{ needs.changelog.outputs.release_body || 'Draft release created for testing purposes' }}
        draft: ${{ github.event_name == 'workflow_dispatch' }}
        prerelease: ${{ github.event_name == 'workflow_dispatch' }}
