name: "build"
on:
  push:
    branches: [ master ]
  pull_request: {}

jobs:
  common-tests:
    strategy:
      matrix:
        os: [ ubuntu-24-large, arm64-linux-16 ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5

      - name: Run Common Tests
        uses: ./.github/actions/test-blueprint
        with:
          os: ${{ matrix.os }}
          test-target: common-tests
          test-name: ${{ matrix.os }}-common-tests
          cachix-auth-token: ${{ secrets.CACHIX_AUTH_TOKEN }}

  gc-tests:
    strategy:
      matrix:
        os: [ ubuntu-24-large, arm64-linux-16 ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5

      - name: Run GC Tests
        uses: ./.github/actions/test-blueprint
        with:
          os: ${{ matrix.os }}
          test-target: gc-tests
          test-name: ${{ matrix.os }}-gc-tests
          cachix-auth-token: ${{ secrets.CACHIX_AUTH_TOKEN }}

  tests:
    strategy:
      matrix:
        os: [ ubuntu-24-large, arm64-linux-16 ]
        build_type: [ release, debug ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
        with:
          # fetch full history so that git merge-base works
          fetch-depth: 0
          # fetch PR commit, not predicted merge commit
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Run Tests
        uses: ./.github/actions/test-blueprint
        with:
          os: ${{ matrix.os }}
          test-target: ${{ matrix.build_type }}-systems-go
          test-name: ${{ matrix.os }}-${{ matrix.build_type }}-tests
          cachix-auth-token: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.PR_AUTOMATION_BOT_PUBLIC_APP_ID }}
          private-key: ${{ secrets.PR_AUTOMATION_BOT_PUBLIC_PRIVATE_KEY }}

      - name: Run Performance Tests
        if: github.actor != 'dependabot[bot]' && github.event_name == 'pull_request' && runner.os == 'Linux' && runner.arch == 'X64' && matrix.build_type == 'release'
        uses: ./.github/actions/performance
        with:
          head_sha: ${{ github.event.pull_request.head.sha }}
          head_ref: ${{ github.event.pull_request.head.ref }}
          base_ref: ${{ github.base_ref }}
          pr_number: ${{ github.event.pull_request.number }}
          is_fork: ${{ github.event.pull_request.head.repo.full_name != github.repository }}
          token: ${{ steps.app-token.outputs.token }}

  reports:
    if: github.ref == 'refs/heads/master'
    needs: [tests]
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
      - uses: cachix/cachix-action@v16
        with:
          name: ic-hs-test
      - name: Fetch report
        run: nix build .#report-site -o report-site
      - name: Resolve symlinks
        run: cp -rL report-site report-site-copy
      - name: Push report to GitHub pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: report-site-copy
          single-commit: true

  artifacts:
    if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && contains(github.event.pull_request.labels.*.name, 'build_artifacts')
    strategy:
      matrix:
        os: [ ubuntu-latest, ubuntu-24.04-arm, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
      - uses: cachix/cachix-action@v16
        with:
          name: ic-hs-test
      - name: nix-build
        run: |
          nix build .#release.moc
      # upload-artifact doesn't work for symlink dir
      # https://github.com/actions/upload-artifact/issues/92
      - run: echo "UPLOAD_PATH=$(readlink -f result)" >> $GITHUB_ENV
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: moc-${{ matrix.os }}
          path: ${{ env.UPLOAD_PATH }}
          retention-days: 5

  verify-common-gc:
    needs: [common-tests, gc-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Common and GC tests passed
        run: echo "Common and GC tests completed successfully."

  verify-main-tests:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Main tests passed
        run: echo "Main tests completed successfully."
